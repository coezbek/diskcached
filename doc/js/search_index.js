var search_data = {"index":{"searchIndex":["diskcached","notfound","add()","cache()","cache_file()","delete()","expired?()","flush()","flush_expired()","flush_expired!()","get()","new()","replace()","set()"],"longSearchIndex":["diskcached","diskcached::notfound","diskcached#add()","diskcached#cache()","diskcached#cache_file()","diskcached#delete()","diskcached#expired?()","diskcached#flush()","diskcached#flush_expired()","diskcached#flush_expired!()","diskcached#get()","diskcached::new()","diskcached#replace()","diskcached#set()"],"info":[["Diskcached","","Diskcached.html","","<p>@author Joshua P. Mervine &lt;joshua@mervine.net&gt;\n"],["Diskcached::NotFound","","Diskcached/NotFound.html","",""],["add","Diskcached","Diskcached.html#method-i-add","(key, value)",""],["cache","Diskcached","Diskcached.html#method-i-cache","(key)","<p>create and read cache with 'key'\n<p>creates cache if it doesn't exist\n<p>reads cache if it exists\n"],["cache_file","Diskcached","Diskcached.html#method-i-cache_file","(key)","<p>returns path to cache file with 'key'\n"],["delete","Diskcached","Diskcached.html#method-i-delete","(key)","<p>expire cache with 'key'\n"],["expired?","Diskcached","Diskcached.html#method-i-expired-3F","(key)","<p>return true if cache with 'key' is expired\n"],["flush","Diskcached","Diskcached.html#method-i-flush","()","<p>expire (delete) all caches in #store directory\n"],["flush_expired","Diskcached","Diskcached.html#method-i-flush_expired","()","<p>flush expired caches if garbage collection hasn't been run recently\n"],["flush_expired!","Diskcached","Diskcached.html#method-i-flush_expired-21","()","<p>flash expired caches, ingoring when garbage collection was last run\n"],["get","Diskcached","Diskcached.html#method-i-get","(key)","<p>get cache with 'key'\n<p>reads cache if it exists and isn't expired  or raises Diskcache::NotFound\n<p>if 'key' ...\n"],["new","Diskcached","Diskcached.html#method-c-new","(store=\"/tmp/cache\", timeout=600, autogc=true)","<p>initialize object\n<p>set #store to passed or default ('/tmp/cache')\n<p>set #timeout to passed or default ('600') ...\n"],["replace","Diskcached","Diskcached.html#method-i-replace","(key, value)",""],["set","Diskcached","Diskcached.html#method-i-set","(key, value)","<p>set cache with 'key'\n<p>run #auto_garbage_collect\n<p>creates cache if it doesn't exist\n"]]}}